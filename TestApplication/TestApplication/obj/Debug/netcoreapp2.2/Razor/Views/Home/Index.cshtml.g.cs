#pragma checksum "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e3b0eee7848559dc5db04874be72d8650a12779e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\Projects\C#\TestApplication\TestApplication\Views\_ViewImports.cshtml"
using TestApplication;

#line default
#line hidden
#line 2 "D:\Projects\C#\TestApplication\TestApplication\Views\_ViewImports.cshtml"
using TestApplication.Models;

#line default
#line hidden
#line 1 "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml"
using TestApplication.Areas.Identity.Managers;

#line default
#line hidden
#line 2 "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml"
using TestApplication.Areas.Identity.Models;

#line default
#line hidden
#line 3 "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml"
using TestApplication.Models.ViewModels;

#line default
#line hidden
#line 4 "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml"
using TestApplication.Common;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e3b0eee7848559dc5db04874be72d8650a12779e", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c18df14659d9ffcf730f540f4c694666d270b7cb", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<MainModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(171, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(238, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(258, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 10 "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Обработка входящих запросов";
    bool isManager = await CustomUserManager.IsInRoleAsync(User, "manager");
    bool isDirector = await CustomUserManager.IsInRoleAsync(User, "director");

#line default
#line hidden
            BeginContext(481, 223, true);
            WriteLiteral("<div style=\"display:flex;flex-direction:column; width:100%;\">\r\n    <div style=\"display:flex;flex-direction:column;\">\r\n        <div style=\"display:flex;\">\r\n            <div style=\"width:100%;font-size:14pt;font-weight:500;\">");
            EndContext();
            BeginContext(705, 17, false);
#line 18 "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml"
                                                               Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(722, 49, true);
            WriteLiteral("</div>\r\n            <div style=\"display:flex;\">\r\n");
            EndContext();
#line 20 "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml"
                 if (isManager)
                {

#line default
#line hidden
            BeginContext(823, 94, true);
            WriteLiteral("                    <button type=\"button\" onclick=\"openSettingsDialog();\">Настройки</button>\r\n");
            EndContext();
#line 23 "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml"
                }

#line default
#line hidden
            BeginContext(936, 210, true);
            WriteLiteral("            </div>\r\n        </div>\r\n        <hr style=\"margin-top:20px;\" />\r\n    </div>\r\n    <div style=\"display:flex;height:100%;margin-top:10px;\">\r\n        <div style=\"display:flex;width:100%;height:100%;\">\r\n");
            EndContext();
#line 30 "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml"
              await Html.RenderPartialAsync("_TabsView", Model.StartTab);

#line default
#line hidden
            BeginContext(1222, 62, true);
            WriteLiteral("        </div>\r\n        <div style=\"width:25%;height:100%;\">\r\n");
            EndContext();
#line 33 "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml"
              await Html.RenderPartialAsync("_ProcessingView");

#line default
#line hidden
            BeginContext(1350, 36, true);
            WriteLiteral("        </div>\r\n    </div>\r\n</div>\r\n");
            EndContext();
#line 37 "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml"
 if (isManager)
{

#line default
#line hidden
            BeginContext(1406, 35, true);
            WriteLiteral("    <dialog id=\"settings_dialog\">\r\n");
            EndContext();
#line 40 "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml"
          await Html.RenderPartialAsync("_SettingsView", Model.Settings);

#line default
#line hidden
            BeginContext(1517, 15, true);
            WriteLiteral("    </dialog>\r\n");
            EndContext();
#line 42 "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml"
}

#line default
#line hidden
            DefineSection("Scripts", async() => {
                BeginContext(1558, 3781, true);
                WriteLiteral(@"
    <script>
         let hubUrl = 'incoming';

        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl(hubUrl)
            .build();
        //
        hubConnection.on('Send', function (message) {
            let result = JSON.parse(message);
            $(""#IncomingContentId"").html(result.message);
        });
        //
        hubConnection.on('UserUpdate', function (message) {
            let result = JSON.parse(message);
            if (result.id && $(""#UsersTableId"").length) {
                //
                let user_cell = $(`#${result.id}`);
                if (user_cell.length) {
                    let circle = user_cell.find("".app-circle"");
                    circle.removeClass(""app-gray"").removeClass(""app-green"").removeClass(""app-gray"");
                    switch (result.state) {
                        case 0:
                            user_cell.find(""label"").text(""Не в системе"");
                            circle.addClass(""app-gray");
                WriteLiteral(@""");
                            break;
                        case 1:
                            user_cell.find(""label"").text(""Свободен"");
                            circle.addClass(""app-green"");
                            break;
                        case 2:
                            user_cell.find(""label"").text(""Занят"");
                            circle.addClass(""app-red"");
                            break;
                    }
                }
                else {//Означает добавление пользователя перерисовываем всю таблицу
                    clickTab(""UsersTabId"", 1);
                }
            }
        });
        //
        hubConnection.start();
        //
        $(function () {
            $(""#settings_dialog"").dialog({ width: ""auto"", autoOpen: false, modal: true, show: ""blind"", hide: ""blind"" });
        });

        function reinitValidation(form) {
            form.removeData(""validator"");
            form.removeData(""unobtrusiveValidation"");
         ");
                WriteLiteral(@"   $.validator.unobtrusive.parse(form);
        }

        //валидация
        $.validator.addMethod('maxlessmin1',
            function (value, element, params) {
                let tm = $(""#Tm"").val();
                let td = $(""#Td"").val();
                return +td > +tm;
            });

        $.validator.addMethod('maxlessmin2',
            function (value, element, params) {
                let from = $(""#From"").val();
                let to = $(""#To"").val();
                return +to > +from;
            });

        $.validator.unobtrusive.adapters.add(""maxlessmin1"", function (options) {
            setValidationValues(options, ""maxlessmin1"", true);
        });

        $.validator.unobtrusive.adapters.add(""maxlessmin2"", function (options) {
            setValidationValues(options, ""maxlessmin2"", true);
        });

        function setValidationValues(options, ruleName, value) {
            options.rules[ruleName] = value;
            if (options.message) {
       ");
                WriteLiteral(@"         options.messages[ruleName] = options.message;
            }
        }

        $.validator.unobtrusive.parse();

        $(document).ready(init);

        $(window).on('resize', init);

        function init() {
            let incoming = $(""#IncomingTableBody"");
            if (incoming.length) {
                incoming.height($(""#IncomingTableId"").height() - 100);
            }
            let users = $(""#UsersTableBody"");
            if (users.length) {
                users.height($(""#UsersTableId"").height() - 100);
            }
        }

        function openSettingsDialog() {
            //Перерисовываем диалог с актуальными настройками
            let url = '");
                EndContext();
                BeginContext(5340, 42, false);
#line 147 "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml"
                  Write(Url.Action("UpdateSettingsDialog", "Home"));

#line default
#line hidden
                EndContext();
                BeginContext(5382, 1682, true);
                WriteLiteral(@"';
            $.ajax({
                type: ""POST"",
                url: url,
                data: """",
                success: function (data) {
                    let _dialog = $(""#settings_dialog"");
                    _dialog.html(data);
                    reinitValidation($(""#SettingsFormId""));
                    _dialog.dialog(""open"");
                    return false;
                },
                error: function (data) {
                    console.log(data);
                },
            });
        }

        function closeSettingsDialog() {
            $(""#settings_dialog"").dialog(""close"");
            return false;
        }

        function saveSettingsDialog() {
            let form = $(""#SettingsFormId"");
            form.validate();
            if (!form.valid()) return;
            $.ajax({
                type: form.attr(""method""),
                url: form.attr(""action""),
                data: form.serialize(),
                success: function (d");
                WriteLiteral(@"ata) {
                    if (data.success) {
                        $(""#settings_dialog"").dialog(""close"");
                    }
                    else {
                        $(""#settings_dialog"").html(data);
                    }
                },
                error: function (data) {
                    console.log(data);
                },
            });
        }

        function clickTab(id, number) {
            $(""#IncomongTabId"").removeClass(""selected-tab"");
            $(""#UsersTabId"").removeClass(""selected-tab"");
            $(""#AdminTabId"").removeClass(""selected-tab"");
            //
            let url = '");
                EndContext();
                BeginContext(7065, 50, false);
#line 197 "D:\Projects\C#\TestApplication\TestApplication\Views\Home\Index.cshtml"
                  Write(Url.Action("SelectTab", "Home", new { Id = "--1"}));

#line default
#line hidden
                EndContext();
                BeginContext(7115, 607, true);
                WriteLiteral(@"';
            $.ajax({
                type: ""POST"",
                url: url.replace(""--1"", number).replace(/&amp;/g, ""&""),
                data: """",
                success: function (data) {
                    $(""#TabContentId"").html(data);
                    $(`#${id}`).addClass(""selected-tab"");
                    init();
                },
                error: function (data) {
                    console.log(data);
                },
            });
        }

        function pagingDemo() {
            alert(""Здесь могла быть ваша пагинация!"")
        }
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public CustomUserManager<CustomIdentityUser> CustomUserManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<MainModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
