@using TestApplication.Models.ViewModels;
@using TestApplication.Common;

@model UsersModel
@{
    int i = 0;
}
<div style="display:flex;flex-direction:column;width:100%;">
    <div id="UsersTableId" style="width:100%;height:100%;margin-top:10px;">
        <div style="display:flex;flex-direction:column;overflow-y:auto;width:100%;">
            <div>
                <div style="display:flex;background-color:darkseagreen;border-bottom:1px solid blue;padding-right:17px;">
                    <div class="first-table-element2">@Html.LabelFor(m=>m.Users.First().UserName)</div>
                    <div class="last-table-element2">@Html.LabelFor(m => m.Users.First().CurrentState)</div>
                </div>
            </div>
            <div id="UsersTableBody" style="height:100px; overflow-y:scroll;margin-top:2px;">
                @foreach (var user in Model.Users)
                {
                    string current_class = i % 2 == 0 ? "even" : "odd";
                    i++;
                    string stateClass = null;
                    switch (user.CurrentState)
                    {
                        case UserState.Busy:
                            stateClass = "app-red";
                            break;
                        case UserState.Free:
                            stateClass = "app-green";
                            break;
                        case UserState.NotLoggedIn:
                            stateClass = "app-gray";
                            break;
                    }
                    <div class="@current_class" style="display:flex;">
                        <div class="first-table-element2">@user.UserName</div>
                        <div class="last-table-element2" id="@user.Id"><div class="app-circle @stateClass"></div><label>@user.CurrentState.GetDisplayName()</label></div>
                    </div>
                }
            </div>
        </div>
        <div style="display:flex;width:100%;justify-content:flex-end;margin-top:4px;">
            <div style="display:flex;">
                <div class="paging-item-first" onclick="pagingDemo();"><</div>
                <div class="paging-item" onclick="pagingDemo();">1</div>
                <div class="paging-item" onclick="pagingDemo();">2</div>
                <div class="paging-item" onclick="pagingDemo();">3</div>
                <div class="paging-item-last" onclick="pagingDemo();">></div>
            </div>
        </div>
    </div>
</div>